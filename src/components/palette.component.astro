---
interface Props {
  primary: string;
  secondary: string;
  green: string;
  yellow: string;
  red: string;
  views: number;
}

const { primary, secondary, green, yellow, red, views } = Astro.props;
---

<div class="flex flex-col h-64 rounded-md">
  <div
    class="flex-[4] rounded-ss-md rounded-se-md"
    style={`background-color: ${primary}`}
  >
    <span>{primary.toUpperCase()}</span>
  </div>
  <div class="flex-[2]" style={`background-color: ${secondary}`}>
    <span>{secondary.toUpperCase()}</span>
  </div>
  <div style={`background-color: ${green}`}>
    <span>{green.toUpperCase()}</span>
  </div>
  <div style={`background-color: ${yellow}`}>
    <span>{yellow.toUpperCase()}</span>
  </div>
  <div style={`background-color: ${red}`}>
    <span>{red.toUpperCase()}</span>
  </div>
  <span
    class="rounded-es-md rounded-ee-md py-1 px-2 bg-dark text-light text-end"
    ><i class="mr-1 text-light fi fi-rr-eye"></i>{views}</span
  >
</div>

<style>
  div > div {
    @apply flex justify-center items-end p-2 transition-all hover:flex-[6] cursor-pointer min-h-8;
  }
  div div span {
    @apply opacity-0 text-light p-1 absolute bg-dark rounded-md bg-opacity-50;
  }
  div div:hover span {
    @apply opacity-100 transition-all;
  }
  span {
    @apply text-xs;
  }
</style>
